name: Publish to PyPI (Semi-Automatic)

on:
  workflow_dispatch:
    inputs:
      confirm_publish:
        description: 'Confirm publication to PyPI'
        required: true
        default: false
        type: boolean
      skip_version_check:
        description: 'Skip version existence check'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  id-token: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    environment: 
      name: pypi-production
      url: https://pypi.org/project/qbitcoin/
    
    steps:
    - name: Validate inputs
      run: |
        if [ "${{ github.event.inputs.confirm_publish }}" != "true" ]; then
          echo "‚ùå Publication not confirmed. Set 'confirm_publish' to true to proceed."
          exit 1
        fi
        echo "‚úÖ Publication confirmed by user"
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine setuptools wheel
        pip install -r requirements.txt
    
    - name: Get current version
      id: get_version
      run: |
        version=$(python -c "from qbitcoin.version import __version__; print(__version__)")
        echo "version=$version" >> $GITHUB_OUTPUT
        echo "Current version: $version"
    
    - name: Check if version exists on PyPI
      if: github.event.inputs.skip_version_check != 'true'
      id: check_version
      run: |
        version=${{ steps.get_version.outputs.version }}
        response=$(curl -s -o /dev/null -w "%{http_code}" https://pypi.org/pypi/qbitcoin/$version/json)
        if [ $response -eq 200 ]; then
          echo "‚ùå Version $version already exists on PyPI"
          echo "Please update the version manually before publishing."
          echo "Use the manual-release workflow or update version files directly."
          exit 1
        else
          echo "‚úÖ Version $version does not exist on PyPI - ready to publish"
          echo "exists=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Version check skipped
      if: github.event.inputs.skip_version_check == 'true'
      run: |
        version=${{ steps.get_version.outputs.version }}
        echo "‚ö†Ô∏è Version check skipped for version $version"
        echo "Publishing without checking if version exists on PyPI"
    
    - name: Build package
      run: |
        echo "üî® Building package..."
        python -m build
        echo "üì¶ Package built successfully"
        ls -la dist/
    
    - name: Verify package contents
      run: |
        echo "üîç Verifying package contents..."
        python -m twine check dist/*
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi }}
      run: |
        version=${{ steps.get_version.outputs.version }}
        echo "üöÄ Publishing Qbitcoin v$version to PyPI..."
        python -m twine upload dist/* --verbose
        echo "‚úÖ Successfully published Qbitcoin v$version to PyPI!"
        echo "üìç Package URL: https://pypi.org/project/qbitcoin/$version/"
    
    - name: Create Git tag
      run: |
        version=$(python -c "from qbitcoin.version import __version__; print(__version__)")
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "v$version" -m "Release v$version" || echo "Tag already exists"
        git push origin "v$version" || echo "Failed to push tag, continuing..."
    
    - name: Commit version changes (if any)
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        if ! git diff --staged --quiet; then
          git commit -m "Auto-increment version"
          git push
        fi
